@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList< KECJobs.Models.JobOpenings>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@*@model IEnumerable<KECJobs.Models.JobOpenings>*@

@{
    if (ViewBag.grad == 1) {
        ViewBag.Title = "Job Openings for graduates list";
    }
    else {
        ViewBag.Title = "Job Openings for experienced list";
    }

    var firstRec = true;
    var UploadPath = ViewBag.UploadPath + "/";
}
}
<br />
<br />
    <h2>Job Openings</h2>  
    <br />
@if ((KECAuthenticate.isAuthenticated == true) && ((KECAuthenticate.IsAdmin == true) || (KECAuthenticate.isJobsEditor == true)))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}
    <p>
        @using (Html.BeginForm("Index","JobOpenings",FormMethod.Get))
        {
        @Html.TextBox("Search")
        @Html.Hidden("grad", (int)ViewBag.grad)
            <input type="submit" value="Search" />
        }
    </p>

<table class="table">
@foreach (var item in Model)
{
    if (firstRec)
    {
        <tr>
            <th>
                Job#
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Company)
            </th>
            <th>
                Job Position
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Qualification)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Locations)
            </th>
            <th>
                Contact Details
            </th>
            <th>
               Acceptance From
            </th>
            <th>
                Acceptance Till
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Keywords)
            </th>
            <th>
                Experience
            </th>
            <th>
                Job <br/>Ad File
            </th>
            <th></th>
        </tr>
    }
    firstRec = false;


            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.JobID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.jobPosition)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Qualification)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Locations)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactDetails)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValidFrom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValidTo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Keywords)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.tbl_Lookup_Experiences.ExperienceShort_Description)
                </td>

                <td>
                    @*@Html.DisplayFor(modelItem => item.ResumeFilePath)*@
                    @{ if ((Convert.ToString(item.JobFile) != "") && (item.JobFile != null))
                            {

                            <a href="@UploadPath@item.JobFile" target="_new">Download </a>
                        }
                    }


                </td>
                <td nowrap>
@if ((KECAuthenticate.isAuthenticated == true) && ((KECAuthenticate.IsAdmin == true) || (KECAuthenticate.isJobsEditor == true)))
{                   <span>
                        @Html.ActionLink("Edit", "Edit", new { id = item.JobOpenID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.JobOpenID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.JobOpenID })
                    </span>
}
else if ((KECAuthenticate.isAuthenticated == true))
{
    <span>
       
        @Html.ActionLink("Details", "Details", new { id = item.JobOpenID })
       
    </span>
}
                </td>
            </tr>
}

    </table>
    
  

<div id='Paging' style="text-align:center">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
</div>
